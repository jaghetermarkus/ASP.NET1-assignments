@* @model X.PagedList.IPagedList<Infrastructure.Entities.CourseEntity> *@
@model CoursesViewModel
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Courses";
}
@* <partial name="~/Views/Shared/Sections/_Courses.cshtml" /> *@

<section class="courses-page">
    <div class="container">
        <div class="courses-header">
            <div class="path">
                <i class="fa-regular fa-house"></i>
                <p>Home</p>
                <i class="fa-sharp fa-solid fa-angles-right"></i>
                <p class="active-path">Courses</p>
            </div>
        
            <div class="content-container">
                <h1 class="courses-title">Courses</h1>
                <form id="courseFilterForm" asp-action="Courses" asp-controller="Course" method="get" class="filters">

                    <div class="select">
                        <div class="selected">All categories</div>
                        <div class="select-options">
                            <div class="option" data-value="all">All categories</div> 
                                @if (Model.Categories != null)
                                {
                                    @foreach (var category in Model.Categories)
                                    {
                                        <div class="option" data-value="@category.CategoryName">@category.CategoryName</div>
                                    }
                                }
                        </div>
                    </div>

                    @* <select name="category" id="category"></select> *@
                    <input type="hidden" name="category" id="selectedCategory" value="all">
                    <input type="search" placeholder="Search courses" name="searchString" id="searchString">
                    <button type="submit">Search</button>
                </form>
            </div>
        </div>

        <div class="courses-wrapper">
            @foreach (var course in Model.Courses)
            {
                @* ViewData["Course"] = course; *@
                
                @await Html.PartialAsync("~/Views/Partials/_CourseCard.cshtml", course) 
            }
        </div>
        <div class="page-seletor">
            <i class="fa-solid fa-angle-left"></i>
            <p>1</p>
            <p>2</p>
            <p class="active-page">3</p>
            <p>4</p>
            <i class="fa-solid fa-angle-right"></i>
        </div>
        

@Html.PagedListPager(Model.Courses, page => Url.Action("Courses", "Course", new { page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })


        <div class="skills-box">
            <div class="skills-content">
                <p>Ready to get started?</p>
                <h2 class="skills-title">Take Your <span>Skills</span> toÂ the Next Level</h2>
                <button class="btn-theme">Work with us</button>
            </div>
            <div class="skills-image-box">
                <img src="/images/courses-illustration.svg" alt="skills illustration image">
            </div>
        </div>
    </div>

</section>